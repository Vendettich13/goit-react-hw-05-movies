{"version":3,"file":"static/js/257.a328fec3.chunk.js","mappings":"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","sources":["components/MovieItem/MovieItem.styled.jsx","components/MovieItem/MovieItem.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","utils/moviesdb.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Image = styled.img`\n    width: 100%;\n    height: auto;\n`\n\nexport const Box = styled.li`\n    border-radius: 10px;\n    overflow: hidden;\n\n    box-shadow: 0px 10px 15px 2px rgba(0,0,0,0.5);\n    transition: transform cubic-bezier(0.165, 0.84, 0.44, 1) 500ms;\n\n    &:hover,\n    &:focus {\n        transform: scale(1.01);\n    }\n`\n\nexport const Text = styled.p`\n    font-weight: 500;\n    padding: 10px;\n    display: flex;\n    align-items: center;\n`\nexport const Link = styled(NavLink)`\n    text-decoration: none;\n    color: black;\n`","import { Image, Text } from \"./MovieItem.styled\";\nimport { Link } from \"../MovieItem/MovieItem.styled\"\nimport { Box } from \"components/MovieItem/MovieItem.styled\"\n\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport function MovieItem({movie: { poster_path, title, name, id }, location}) {\n    return <Link to={`movies/${id}` } state={{from: location}}>\n    <Box key={id}>\n        <Image src={`${BASE_IMG_URL}` + poster_path} alt={title || name} />\n        <Text>{title || name}</Text>\n        </Box>\n        </Link>\n}","import styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Wrapper = styled.div`\ndisplay: block;\n`\nexport const Image = styled.img`\n    width: 300px;\n    margin-right: 40px;\n`\n\nexport const Title = styled.h1`\n    font-size: 30px;\n    margin-bottom: 20px;\n`\nexport const Year = styled.p`\n    font-weight: 500;\n    font-size: 20px;\n    margin-bottom: 20px;\n`\nexport const Description = styled.h2`\n    margin-bottom: 10px;\n    font-size: 25px;\n`\nexport const OverviewText = styled.p`\n    font-size: 20px;\n    margin-bottom: 20px;\n`\nexport const Genres = styled.p`\n    font-size: 20px;\n`\nexport const Link = styled(NavLink)`\n    text-decoration: none;\n    display: block;\n    margin-bottom: 20px;\n\n    font-size: 20px;\n    font-weight: 500;\n    color: black;\n`","import { Outlet, useParams, useLocation } from \"react-router-dom\";\nimport { getMovieDetails } from \"utils/moviesdb\";\nimport { BASE_IMG_URL } from \"components/MovieItem/MovieItem\";\nimport { useState, useEffect, Suspense } from \"react\";\nimport { Image, Description, OverviewText, Title, Wrapper, Year, Genres } from \"./MovieDetails.styled\";\nimport { Link } from \"./MovieDetails.styled\";\n\nexport default function MovieDetails() {\n    const [movie, setMovie] = useState(null);\n    const { movieId } = useParams();\n    const location = useLocation();\n\n    const backLinkHref = location.state?.from ?? \"/\";\n\n    useEffect(() => {\n        getMovieDetails(Number(movieId)).then(movie => setMovie(movie.data))\n    },[movieId])\n\n    return <>\n        {movie &&\n            <Wrapper>\n                <Link to={backLinkHref}>Back to movies</Link>\n                <div style={{display: 'flex', marginBottom: '20px'}}>\n                <Image src={movie.poster_path ? `${BASE_IMG_URL}` + movie.poster_path : 'https://static7.depositphotos.com/1021974/739/i/950/depositphotos_7397821-stock-photo-cinema.jpg'} alt={movie.title || movie.name} />\n                <div style={{padding: \"30px 0\"}}>\n                    <Title>{movie.title || movie.name}</Title>\n                    <Year>({movie.release_date})</Year>\n                    <Description>Overview</Description>\n                    <OverviewText>{movie.overview}</OverviewText>\n                    <Description>Genres</Description>\n                    <Genres>\n                    {movie.genres.map(genre => { return genre.name }).join(', ')}\n                    </Genres>\n                    </div>\n                    </div>\n            <div>\n                <Link to='cast'>Cast</Link>\n                <Link to='reviews'>Cast</Link>\n            </div>\n            </Wrapper>}\n        <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n        </> \n}","import axios from 'axios';\n\nconst API_KEY = 'db88cb17e110bf96da2b8bba1fcb8edb';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst TRENDING_URL = 'trending/all/day';\nconst BY_SEARCH_URL = 'search/movie';\nconst DETAILS_URL = 'movie/';\nconst ACTORS_URL = 'movie/get-movie-credits';\nconst REVIEWS = 'movie/get-movie-reviews';\n\nexport async function getTrendingMovies() {\n  const response = await axios.get(\n    `${BASE_URL}${TRENDING_URL}?api_key=${API_KEY}`\n  );\n  return response;\n}\n\nexport async function getMovieBySearch(query) {\n  const response = await axios.get(\n    `${BASE_URL}${BY_SEARCH_URL}?api_key=${API_KEY}&query=${query}`\n  );\n  return response;\n}\n\nexport async function getMovieDetails(id) {\n  const response = await axios.get(\n    `${BASE_URL}${DETAILS_URL}${id}?api_key=${API_KEY}`\n  );\n  return response;\n}\n\nexport async function getMovieActors(page, query) {\n  const response = await axios.get(\n    `${BASE_URL}${ACTORS_URL}?api_key=${API_KEY}&page=${page}&query=${query}`\n  );\n  return response;\n}\n\nexport async function getMovieReviews(page, query) {\n  const response = await axios.get(\n    `${BASE_URL}${REVIEWS}?api_key=${API_KEY}&page=${page}&query=${query}`\n  );\n  return response;\n}\n"],"names":["Image","styled","Box","Text","Link","NavLink","BASE_IMG_URL","MovieItem","movie","poster_path","title","name","id","location","to","state","from","src","alt","Wrapper","Title","Year","Description","OverviewText","Genres","MovieDetails","useState","setMovie","movieId","useParams","backLinkHref","useLocation","useEffect","getMovieDetails","Number","then","data","style","display","marginBottom","padding","release_date","overview","genres","map","genre","join","Suspense","fallback","API_KEY","BASE_URL","TRENDING_URL","BY_SEARCH_URL","DETAILS_URL","ACTORS_URL","getTrendingMovies","axios","response","getMovieBySearch","query","getMovieActors","page"],"sourceRoot":""}