{"version":3,"file":"static/js/758.de01efbc.chunk.js","mappings":"2PAEaA,EAAOC,EAAAA,EAAAA,GAAH,+HAMJC,EAAQD,EAAAA,EAAAA,IAAH,0CAGLE,EAAOF,EAAAA,EAAAA,EAAH,qH,SCPV,SAASG,EAAT,GAA+D,IAAD,IAA1CC,MAAQC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,UACnD,OAAO,8BAAGF,IAAgB,UAACN,EAAD,YACtB,SAACE,EAAD,CAAOO,IAAK,UAJQ,mCAIWH,EAAcI,IAAKH,KAClD,SAACJ,EAAD,CAAMQ,MAAO,CAACC,SAAU,QAAxB,SAAkCL,KAClC,UAACJ,EAAD,yBAAkBK,SAGzB,CCTM,IAAMK,EAAOZ,EAAAA,EAAAA,GAAH,wTCKF,SAASa,IACpB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAeC,OAAON,IAAUO,MAAK,SAAAC,GAAO,OAAIT,EAAQS,EAAQC,KAAKX,KAAzB,IAAgCY,OAAM,SAAAR,GAAK,OAAIC,EAASD,EAAMS,QAAnB,GAC1F,GAAE,CAACX,KAEG,gCACFE,GAAS,uCACV,SAACP,EAAD,UACKG,EAAKc,KAAI,SAAAzB,GAAU,OAAO,SAACD,EAAD,CAAUC,MAAOA,GAAYA,EAAM0B,GAAO,QAGhF,C,mMCpBKC,EAAU,mCACVC,EAAW,gCACXC,EAAe,qBACfC,EAAgB,eAChBC,EAAc,SACdC,EAAa,SACbC,EAAU,SAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,UAClBP,GADkB,OACPC,EADO,oBACiBF,IAFnC,cACCS,EADD,yBAIEA,GAJF,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACkBH,EAAAA,EAAAA,IAAA,UAClBP,GADkB,OACPE,EADO,oBACkBH,EADlB,kBACmCW,IAFrD,cACCF,EADD,yBAIEA,GAJF,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+Bb,GAA/B,uFACkBS,EAAAA,EAAAA,IAAA,UAClBP,GADkB,OACPG,GADO,OACOL,EADP,oBACqBC,IAFvC,cACCS,EADD,yBAIEA,GAJF,kEAOA,SAAelB,EAAtB,+CAAO,OAAP,oBAAO,WAA8BQ,GAA9B,uFACkBS,EAAAA,EAAAA,IAAA,UAClBP,GADkB,OACPI,GADO,OACMN,EADN,4BAC4BC,IAF9C,cACCS,EADD,yBAIEA,GAJF,kEAOA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+Bd,GAA/B,uFACkBS,EAAAA,EAAAA,IAAA,UAClBP,GADkB,OACPK,GADO,OACGP,EADH,4BACyBC,IAF3C,cACCS,EADD,yBAIEA,GAJF,kE","sources":["components/CastItem/CastItem.styled.jsx","components/CastItem/CastItem.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","utils/moviesdb.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Item = styled.li`\n    border-radius: 10px;\n    overflow: hidden;\n\n    box-shadow: 0px 10px 15px 2px rgba(0,0,0,0.5);\n`\nexport const Image = styled.img`\n    width: 100%;\n`\nexport const Text = styled.p`\n    font-weight: 500;\n    padding: 5px 10px;\n    display: flex;\n    align-items: center;\n`","import { Image, Item, Text } from \"./CastItem.styled\";\n\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport function CastItem({ actor: {profile_path, name, character} }) {\n    return <>{profile_path && <Item>\n        <Image src={`${BASE_IMG_URL}`+ profile_path} alt={name} />\n        <Text style={{fontSize: '20px'}}>{name}</Text>\n        <Text>Character: {character}</Text>\n    </Item>}\n        </>\n}","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n    padding: 30px 0;\n    text-decoration: none;\n    display: grid;\n    grid-template-columns: repeat(5, 1fr);\n    grid-template-rows: repeat(4, 1fr);\n    grid-gap: 20px;\n    border-bottom: 3px solid;\n    border-image: linear-gradient(45deg, rgb(30, 1, 252), rgb(255, 255, 12)) 1;\n`","import { useEffect, useState } from \"react\";\nimport { getMovieActors } from \"utils/moviesdb\";\nimport { useParams } from \"react-router-dom\";\nimport { CastItem } from \"components/CastItem/CastItem\";\nimport { List } from \"./Cast.styled\";\n\n\nexport default function Cast() {\n    const [cast, setCast] = useState([])\n    const { movieId } = useParams();\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        getMovieActors(Number(movieId)).then(credits => setCast(credits.data.cast)).catch(error => setError(error.message))\n    }, [movieId])\n\n    return <>\n        {error && \"Something wrong, reload the page...\"}\n        <List>\n            {cast.map(actor => {return <CastItem actor={actor} key={actor.id} />})}\n        </List>\n    </>\n}","import axios from 'axios';\n\nconst API_KEY = 'db88cb17e110bf96da2b8bba1fcb8edb';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst TRENDING_URL = 'trending/movie/day';\nconst BY_SEARCH_URL = 'search/movie';\nconst DETAILS_URL = 'movie/';\nconst ACTORS_URL = 'movie/';\nconst REVIEWS = 'movie/';\n\nexport async function getTrendingMovies() {\n  const response = await axios.get(\n    `${BASE_URL}${TRENDING_URL}?api_key=${API_KEY}`\n  );\n  return response;\n}\n\nexport async function getMovieBySearch(query) {\n  const response = await axios.get(\n    `${BASE_URL}${BY_SEARCH_URL}?api_key=${API_KEY}&query=${query}`\n  );\n  return response;\n}\n\nexport async function getMovieDetails(id) {\n  const response = await axios.get(\n    `${BASE_URL}${DETAILS_URL}${id}?api_key=${API_KEY}`\n  );\n  return response;\n}\n\nexport async function getMovieActors(id) {\n  const response = await axios.get(\n    `${BASE_URL}${ACTORS_URL}${id}/credits?api_key=${API_KEY}`\n  );\n  return response;\n}\n\nexport async function getMovieReviews(id) {\n  const response = await axios.get(\n    `${BASE_URL}${REVIEWS}${id}/reviews?api_key=${API_KEY}`\n  );\n  return response;\n}\n"],"names":["Item","styled","Image","Text","CastItem","actor","profile_path","name","character","src","alt","style","fontSize","List","Cast","useState","cast","setCast","movieId","useParams","error","setError","useEffect","getMovieActors","Number","then","credits","data","catch","message","map","id","API_KEY","BASE_URL","TRENDING_URL","BY_SEARCH_URL","DETAILS_URL","ACTORS_URL","REVIEWS","getTrendingMovies","axios","response","getMovieBySearch","query","getMovieDetails","getMovieReviews"],"sourceRoot":""}