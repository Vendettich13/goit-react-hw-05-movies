{"version":3,"file":"static/js/257.9a542510.chunk.js","mappings":"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","sources":["components/MovieItem/MovieItem.styled.jsx","components/MovieItem/MovieItem.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","utils/moviesdb.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\n\nexport const Image = styled.img`\n    width: 100%;\n    height: auto;\n`\n\nexport const Box = styled.div`\n    border-radius: 10px;\n    overflow: hidden;\n\n    box-shadow: 0px 10px 15px 2px rgba(0,0,0,0.5);\n    transition: transform cubic-bezier(0.165, 0.84, 0.44, 1) 500ms;\n\n    &:hover,\n    &:focus {\n        transform: scale(1.01);\n    }\n`\n\nexport const Text = styled.p`\n    height: 30px;\n    font-weight: 500;\n    padding: 10px 10px 5px;\n    display: flex;\n    align-items: center;\n`\nexport const MyLink = styled(Link)`\n    text-decoration: none;\n    color: black;\n`","import { Image, Text } from \"./MovieItem.styled\";\nimport { MyLink } from \"./MovieItem.styled\";\nimport { Box } from \"components/MovieItem/MovieItem.styled\"\n\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\n\nexport function MovieItem({ movie: { poster_path, title, name, id, vote_average }, location }) {\n    return <li>\n        <MyLink to={`/movies/${id}`} state={{ from: location }} >\n        <Box>\n        <Image src={`${BASE_IMG_URL}` + poster_path} alt={title || name} />\n                <Text style={{fontSize: '20px'}}>{title || name}</Text>\n                <Text>Rate: {vote_average.toFixed(1)} / 10</Text>\n        </Box>\n        </MyLink>\n        </li>\n}","import styled from \"@emotion/styled\";\nimport { NavLink, Link } from \"react-router-dom\";\n\nexport const Wrapper = styled.div`\ndisplay: block;\n`\nexport const Image = styled.img`\n    width: 350px;\n    margin-right: 40px;\n    border-radius: 10px;\n`\n\nexport const Title = styled.h1`\n    font-size: 30px;\n    margin-bottom: 20px;\n`\nexport const Year = styled.p`\n    font-weight: 500;\n    font-size: 20px;\n    margin-bottom: 20px;\n`\nexport const Description = styled.h2`\n    margin-bottom: 10px;\n    font-size: 25px;\n`\nexport const OverviewText = styled.p`\n    font-size: 20px;\n    margin-bottom: 20px;\n`\nexport const Genres = styled.p`\n    font-size: 20px;\n`\nexport const MyLink = styled(NavLink)`\n    padding: 5px 10px;\n    text-decoration: none;\n    display: inline-block;\n    border-radius: 10px;\n\n    font-size: 20px;\n    font-weight: 500;\n    color: black;\n    transition: color 500ms cubic-bezier(0.165, 0.84, 0.44, 1), background-color 500ms cubic-bezier(0.165, 0.84, 0.44, 1);\n\n    &:hover,\n    &:focus {\n        color: rgb(30, 1, 252);\n    }\n\n    &.active {\n        color: white;\n        background-color: rgb(30, 1, 252);\n    }\n\n    &:not(:last-child) {\n        margin-right: 10px;\n    }\n`\nexport const BackLink = styled(Link)`\n    text-decoration: none;\n    margin-bottom: 20px;\n    display: inline-flex;\n    align-items: center;\n    gap: 5px;\n\n    font-size: 30px;\n    font-weight: 500;\n    color: black;\n    transition: color 500ms cubic-bezier(0.165, 0.84, 0.44, 1);\n\n    &:hover,\n    &:focus {\n        color: rgb(30, 1, 252);\n    }\n`\n\nexport const LinkWrapper = styled.div`\npadding: 20px 0;\nborder-top: 3px solid;\nborder-bottom: 3px solid;\nborder-image: linear-gradient(45deg, rgb(30, 1, 252), rgb(255, 255, 12)) 1;\n`\n\nexport const Additional = styled.p`\n    margin-bottom: 10px;\n    font-weight: 500;\n    font-size: 20px;\n`","import { Outlet, useParams, useLocation } from \"react-router-dom\";\nimport { getMovieDetails } from \"utils/moviesdb\";\nimport { BASE_IMG_URL } from \"components/MovieItem/MovieItem\";\nimport { useState, useEffect, Suspense } from \"react\";\nimport { Image, Description, OverviewText, Title, Wrapper, Year, Genres, LinkWrapper, Additional, BackLink } from \"./MovieDetails.styled\";\nimport { MyLink } from \"./MovieDetails.styled\";\nimport {FaArrowLeft} from \"react-icons/fa\"\n\nexport default function MovieDetails() {\n    const [movie, setMovie] = useState(null);\n    const { movieId } = useParams();\n    const [error, setError] = useState(null);\n    const location = useLocation();\n\n    const backLinkHref = location.state?.from ?? \"/\";\n\n    useEffect(() => {\n        getMovieDetails(Number(movieId)).then(movie => setMovie(movie.data)).catch(error => setError(error.message))\n    },[movieId])\n\n    return <>\n        {error && \"Something wrong, reload the page...\"}\n        {movie &&\n            <Wrapper>\n                <BackLink to={backLinkHref}><FaArrowLeft/>Back to movies</BackLink>\n                <div style={{display: 'flex', marginBottom: '20px'}}>\n                <Image src={movie.poster_path ? `${BASE_IMG_URL}` + movie.poster_path : 'https://static7.depositphotos.com/1021974/739/i/950/depositphotos_7397821-stock-photo-cinema.jpg'} alt={movie.title || movie.name} />\n                <div style={{padding: \"30px 0\"}}>\n                    <Title>{movie.title || movie.name}</Title>\n                    <Year>({movie.release_date})</Year>\n                    <Description>Overview</Description>\n                    <OverviewText>{movie.overview}</OverviewText>\n                    <Description>Genres</Description>\n                    <Genres>\n                    {movie.genres.map(genre => { return genre.name }).join(', ')}\n                    </Genres>\n                    </div>\n                    </div>\n                <LinkWrapper>\n                    <Additional>Additional information</Additional>\n                <MyLink to='cast'>Cast</MyLink>\n                <MyLink to='reviews'>Reviews</MyLink>\n            </LinkWrapper>\n            </Wrapper>}\n        <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n        </> \n}","import axios from 'axios';\n\nconst API_KEY = 'db88cb17e110bf96da2b8bba1fcb8edb';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst TRENDING_URL = 'trending/movie/day';\nconst BY_SEARCH_URL = 'search/movie';\nconst DETAILS_URL = 'movie/';\nconst ACTORS_URL = 'movie/';\nconst REVIEWS = 'movie/';\n\nexport async function getTrendingMovies() {\n  const response = await axios.get(\n    `${BASE_URL}${TRENDING_URL}?api_key=${API_KEY}`\n  );\n  return response;\n}\n\nexport async function getMovieBySearch(query) {\n  const response = await axios.get(\n    `${BASE_URL}${BY_SEARCH_URL}?api_key=${API_KEY}&query=${query}`\n  );\n  return response;\n}\n\nexport async function getMovieDetails(id) {\n  const response = await axios.get(\n    `${BASE_URL}${DETAILS_URL}${id}?api_key=${API_KEY}`\n  );\n  return response;\n}\n\nexport async function getMovieActors(id) {\n  const response = await axios.get(\n    `${BASE_URL}${ACTORS_URL}${id}/credits?api_key=${API_KEY}`\n  );\n  return response;\n}\n\nexport async function getMovieReviews(id) {\n  const response = await axios.get(\n    `${BASE_URL}${REVIEWS}${id}/reviews?api_key=${API_KEY}`\n  );\n  return response;\n}\n"],"names":["Image","styled","Box","Text","MyLink","Link","BASE_IMG_URL","MovieItem","movie","poster_path","title","name","id","vote_average","location","to","state","from","src","alt","style","fontSize","toFixed","Wrapper","Title","Year","Description","OverviewText","Genres","NavLink","BackLink","LinkWrapper","Additional","MovieDetails","useState","setMovie","movieId","useParams","error","setError","backLinkHref","useLocation","useEffect","getMovieDetails","Number","then","data","catch","message","display","marginBottom","padding","release_date","overview","genres","map","genre","join","Suspense","fallback","API_KEY","BASE_URL","TRENDING_URL","BY_SEARCH_URL","DETAILS_URL","ACTORS_URL","REVIEWS","getTrendingMovies","axios","response","getMovieBySearch","query","getMovieActors","getMovieReviews"],"sourceRoot":""}