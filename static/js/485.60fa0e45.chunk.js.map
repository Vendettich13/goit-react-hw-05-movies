{"version":3,"file":"static/js/485.60fa0e45.chunk.js","mappings":"mOAGaA,EAAQC,EAAAA,EAAAA,IAAH,6DAKLC,EAAMD,EAAAA,EAAAA,GAAH,2QAaHE,EAAOF,EAAAA,EAAAA,EAAH,iHAMJG,GAAOH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,uE,SCvBJK,EAAe,kCAErB,SAASC,EAAT,GAAyE,IAAD,IAApDC,MAASC,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,GAAMC,EAAW,EAAXA,SAChE,OAAO,SAACT,EAAD,CAAMU,GAAE,iBAAYF,GAAOG,MAAO,CAACC,KAAMH,GAAzC,UACP,UAACX,EAAD,YACI,SAACF,EAAD,CAAOiB,IAAK,UAAGX,GAAiBG,EAAaS,IAAKR,GAASC,KAC3D,SAACR,EAAD,UAAOO,GAASC,MAFVC,IAKb,C,8ECXYO,E,OAAOlB,EAAAA,GAAH,0M,SCCV,SAASmB,EAAT,GAAgC,IAAXC,EAAU,EAAVA,OACxB,OAAO,SAACF,EAAD,UACEE,EAAOC,KAAI,SAAAd,GAAU,OAAO,SAACD,EAAA,EAAD,CAAWC,MAAOA,GAAW,KAGrE,C,yICAYe,IALOtB,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,6FAKIA,EAAAA,EAAAA,GAAH,oG,SCHH,SAASuB,IACpB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOJ,EAAP,KAAeK,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACVC,EAAAA,EAAAA,MAAoBC,MAAK,SAAAV,GAAM,OAAIK,EAAUL,EAAOW,KAAKC,QAA1B,IAAoCC,OAAM,SAAAP,GAAK,OAAIC,EAASD,EAAMQ,QAAnB,GAC/E,GAAE,KAEM,iCACH,SAACZ,EAAD,6BACCI,GAAS,oCACV,SAACP,EAAA,EAAD,CAAWC,OAAQA,MAE1B,C,uKChBKe,EAAU,mCACVC,EAAW,gCACXC,EAAe,mBACfC,EAAgB,eAChBC,EAAc,SACdC,EAAa,0BAGZ,SAAeX,IAAtB,4CAAO,OAAP,oBAAO,oGACkBY,EAAAA,EAAAA,IAAA,UAClBL,GADkB,OACPC,EADO,oBACiBF,IAFnC,cACCO,EADD,yBAIEA,GAJF,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACkBH,EAAAA,EAAAA,IAAA,UAClBL,GADkB,OACPE,EADO,oBACkBH,EADlB,kBACmCS,IAFrD,cACCF,EADD,yBAIEA,GAJF,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BlC,GAA/B,uFACkB8B,EAAAA,EAAAA,IAAA,UAClBL,GADkB,OACPG,GADO,OACO5B,EADP,oBACqBwB,IAFvC,cACCO,EADD,yBAIEA,GAJF,kEAOA,SAAeI,EAAtB,iDAAO,OAAP,oBAAO,WAA8BC,EAAMH,GAApC,uFACkBH,EAAAA,EAAAA,IAAA,UAClBL,GADkB,OACPI,EADO,oBACeL,EADf,iBAC+BY,EAD/B,kBAC6CH,IAF/D,cACCF,EADD,yBAIEA,GAJF,kE","sources":["components/MovieItem/MovieItem.styled.jsx","components/MovieItem/MovieItem.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx","utils/moviesdb.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Image = styled.img`\n    width: 100%;\n    height: auto;\n`\n\nexport const Box = styled.li`\n    border-radius: 10px;\n    overflow: hidden;\n\n    box-shadow: 0px 10px 15px 2px rgba(0,0,0,0.5);\n    transition: transform cubic-bezier(0.165, 0.84, 0.44, 1) 500ms;\n\n    &:hover,\n    &:focus {\n        transform: scale(1.01);\n    }\n`\n\nexport const Text = styled.p`\n    font-weight: 500;\n    padding: 10px;\n    display: flex;\n    align-items: center;\n`\nexport const Link = styled(NavLink)`\n    text-decoration: none;\n    color: black;\n`","import { Image, Text } from \"./MovieItem.styled\";\nimport { Link } from \"../MovieItem/MovieItem.styled\"\nimport { Box } from \"components/MovieItem/MovieItem.styled\"\n\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport function MovieItem({movie: { poster_path, title, name, id }, location}) {\n    return <Link to={`movies/${id}` } state={{from: location}}>\n    <Box key={id}>\n        <Image src={`${BASE_IMG_URL}` + poster_path} alt={title || name} />\n        <Text>{title || name}</Text>\n        </Box>\n        </Link>\n}","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n    text-decoration: none;\n    display: grid;\n    grid-template-columns: repeat(5, 1fr);\n    grid-template-rows: repeat(4, 1fr);\n    grid-gap: 30px;\n    margin: 30px auto;\n`","import { MovieItem } from \"components/MovieItem/MovieItem\"\nimport { List } from \"./MovieList.styled\"\n\nexport function MovieList({ movies }) {\n    return <List>\n            {movies.map(movie => {return <MovieItem movie={movie} /> })}\n        </List>\n    \n}","import { NavLink } from \"react-router-dom\";\nimport styled from \"@emotion/styled\";\n\nexport const Link = styled(NavLink)`\n    text-decoration: none;\n    font-size: 20px;\n    color: black;\n`\nexport const Title = styled.h1`\n    display: flex;\n     justify-content: center;\n      font-size: 40px;\n`","import { getTrendingMovies } from \"utils/moviesdb\";\nimport { useEffect, useState } from \"react\";\nimport { MovieList } from \"components/MovieList/MovieList\";\nimport { Title } from \"./Home.styled\";\n\nexport default function Home() {\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState('')\n\n    useEffect(() => {\n    getTrendingMovies().then(movies => setMovies(movies.data.results)).catch(error => setError(error.message))\n  }, [])\n    \n    return <>\n        <Title>Trending today</Title>\n        {error && \"Something wrong, reload the page\"}\n        <MovieList movies={movies} />\n    </>\n}","import axios from 'axios';\n\nconst API_KEY = 'db88cb17e110bf96da2b8bba1fcb8edb';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst TRENDING_URL = 'trending/all/day';\nconst BY_SEARCH_URL = 'search/movie';\nconst DETAILS_URL = 'movie/';\nconst ACTORS_URL = 'movie/get-movie-credits';\nconst REVIEWS = 'movie/get-movie-reviews';\n\nexport async function getTrendingMovies() {\n  const response = await axios.get(\n    `${BASE_URL}${TRENDING_URL}?api_key=${API_KEY}`\n  );\n  return response;\n}\n\nexport async function getMovieBySearch(query) {\n  const response = await axios.get(\n    `${BASE_URL}${BY_SEARCH_URL}?api_key=${API_KEY}&query=${query}`\n  );\n  return response;\n}\n\nexport async function getMovieDetails(id) {\n  const response = await axios.get(\n    `${BASE_URL}${DETAILS_URL}${id}?api_key=${API_KEY}`\n  );\n  return response;\n}\n\nexport async function getMovieActors(page, query) {\n  const response = await axios.get(\n    `${BASE_URL}${ACTORS_URL}?api_key=${API_KEY}&page=${page}&query=${query}`\n  );\n  return response;\n}\n\nexport async function getMovieReviews(page, query) {\n  const response = await axios.get(\n    `${BASE_URL}${REVIEWS}?api_key=${API_KEY}&page=${page}&query=${query}`\n  );\n  return response;\n}\n"],"names":["Image","styled","Box","Text","Link","NavLink","BASE_IMG_URL","MovieItem","movie","poster_path","title","name","id","location","to","state","from","src","alt","List","MovieList","movies","map","Title","Home","useState","setMovies","error","setError","useEffect","getTrendingMovies","then","data","results","catch","message","API_KEY","BASE_URL","TRENDING_URL","BY_SEARCH_URL","DETAILS_URL","ACTORS_URL","axios","response","getMovieBySearch","query","getMovieDetails","getMovieActors","page"],"sourceRoot":""}